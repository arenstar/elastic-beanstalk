#!/bin/bash
# MAINTAINER = Idioter <wholanda@yahoo.com>
set -x
# sidekiq    Init script for Sidekiq 
# chkconfig: 345 100 75
#
# Description: Starts and Stops Sidekiq message processor for Status application.
#
# User-specified exit parameters used in this script:
#
# Exit Code 5 - Incorrect User ID
# Exit Code 6 - Directory not found
export PATH="/home/ubuntu/.rvm/gems/ruby-2.1.5/bin:/home/ubuntu/.rvm/gems/ruby-2.1.5@global/bin:/home/ubuntu/.rvm/rubies/ruby-2.1.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/ubuntu/.rvm/bin:/home/ubuntu/.rvm/bin
" # Add RVM to PATH for scripting
export RAILS_ENV=development
export RDS_HOSTNAME=your_rds_or_postgre_hostname_or_ip_address
export RDS_DB_NAME=your_db_name
export RDS_PASSWORD=db_password
export RDS_USERNAME=db_username
export RDS_PORT=5432
export DATABASE_URL="postgresql://$RDS_HOSTNAME/$RDS_DB_NAME"
export HONEYBADGER_KEY=your_honeybadger_key
# PARAMETERS 
APP="myapp"
AS_USER="ubuntu"
APP_DIR="/home/ubuntu/${APP}"
SCRIPTDIR="/home/ubuntu/scripts"

APP_CONFIG="${APP_DIR}/config"
LOG_FILE="$SCRIPTDIR/log/sidekiq.log"
PID_FILE="$SCRIPTDIR/sidekiq.pid"
GEMFILE="$APP_DIR/Gemfile"
SIDEKIQ="sidekiq"
APP_ENV="development"
BUNDLE="bundle"

START_CMD1="$SIDEKIQ -e $APP_ENV -C $APP_CONFIG/sidekiq.yml -L $LOG_FILE -d"
CMD1="cd ${APP_DIR}; ${START_CMD1} >> ${LOG_FILE} 2>&1 &"

RETVAL=0


start() {

  sidekiq_status
  if [ $? -eq 1 ]; then

    [ `id -u` == '1000' ] || (echo "$SIDEKIQ runs as $AS_USER only .."; exit 5)
    [ -d $APP_DIR ] || (echo "$APP_DIR not found!.. Exiting"; exit 6)
    cd $APP_DIR
    echo "Starting $SIDEKIQ message processor .. "

    bash -c "$CMD1"

    RETVAL=$?
    #Sleeping for 8 seconds for process to be precisely visible in process table - See status ()
    sleep 8
    [ $RETVAL -eq 0 ]
    return $RETVAL
  else
    echo "$SIDEKIQ message processor is already running .. "
  fi

}

stop() {

    echo "Stopping $SIDEKIQ message processor .."
    SIG="INT"
    getpid | xargs kill -$SIG

}

sidekiq_status() {

  ps -ef | grep 'sidekiq [0-9].[0-9].[0-9]' | grep -v grep
  return $?

}

getpid() {
	sidekiq_status | head -n 1 | awk '{print $2}'
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
	sleep 8
        ;;
    restart)
        stop
    	sleep 8
	start
	sidekiq_status
        ;;
    status)
        sidekiq_status

        if [ $? -eq 0 ]; then
             echo "$SIDEKIQ message processor is running .."
             RETVAL=0
         else
             echo "$SIDEKIQ message processor is stopped .."
             RETVAL=1
         fi
        ;;
    *)
        echo "Usage: $0 {start|stop|status}"
        exit 0
        ;;
esac
exit $RETVAL
